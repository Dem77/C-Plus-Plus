package insrt_sort;

import java.util.Arrays;

public class Scores {
	
	public static int [] scores = {98, 86, 75, 61, 55, 50, 40, 39, 0, 0};
	public static int numOfScores = 8; 

	public static void main(String[] args) {
		
		System.out.println(Arrays.toString(scores));
		remove(75);
		System.out.println(Arrays.toString(scores));
	}

	public static int add(int newScore) {
		
		if (numOfScores == scores.length && scores[scores.length - 1] > newScore)
			return 0;
		else {
			int i = numOfScores - 1;
			for ( ;(i >= 1) && scores[i - 1] < newScore; i--) {
				scores[i] = scores[i-1];
			}
			scores[i] = newScore;
			if (numOfScores < scores.length) numOfScores++;
			return (i+1);
		}
	}
	
	public static boolean numberExists(int search_param) {
		
		boolean found = false;
		for (int j = 0; j < scores.length; j++) {
			if (scores[j] == search_param)
				found = true;
		}
		if (found == true)
			return true;
		else
			return false;
	}
	
	public static int remove(int oldScore) {
		boolean result = numberExists(oldScore);
		int k = 0;
		int position = 0;
		if (result == false) {
			System.out.println("Number does not exist");
			return 0;
		} else {
			for ( ; k < numOfScores; k++) {
				scores[k] = scores[k+1];
				position = k;
			}
		}
		return position;
	}
}
